{
  "name": "randomcolor",
  "version": "0.2.0",
  "description": "For generating attractive random colors",
  "main": "randomColor.js",
  "directories": {
    "test": "tests"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/davidmerfield/randomColor.git"
  },
  "keywords": [
    "attractive",
    "random",
    "color",
    "generator"
  ],
  "author": {
    "name": "David Merfield"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/davidmerfield/randomColor/issues"
  },
  "homepage": "http://llllll.li/randomColor/",
  "spm": {
    "main": "randomColor.js"
  },
  "readme": "# [Random Color](http://llllll.li/randomColor)\n\nA tiny script for generating attractive random colors. See the results on [the demo](http://llllll.li/randomColor/).\n\n[![Demo](http://llllll.li/randomColor/repo_demo.gif)](http://llllll.li/randomColor)\n\nrandomColor is available [minified on cdnjs](http://cdnjs.com/libraries/randomcolor). It is also distributed on [npm](https://www.npmjs.org/package/randomcolor) and bower.\n\n```javascript\nnpm install randomcolor\n```\nrandomColor has been ported to [C#](https://github.com/nathanpjones/randomColorSharped), [Go](https://github.com/hansrodtang/randomcolor), [PHP](https://github.com/mistic100/RandomColor.php), [Python](https://github.com/kevinwuhoo/randomcolor-py) and [Swift](https://github.com/onevcat/RandomColorSwift).\n \n### Options\n\nYou can pass an options object to influence the type of color it produces. The options object accepts the following properties:\n\n**Hue** – Controls the hue of the generated color. You can pass a string representing a color name (e.g. 'orange'). Possible color names are *red, orange, yellow, green, blue, purple, pink and monochrome*.\n\n**Luminosity** – Controls the luminosity of the generated color. You can pass a string containing *bright, light* or *dark*.\n\n**Count** – An integer which specifies the number of colors to generate.\n\n**Format** – A string which specifies the format of the generated color. Possible values are *hsl, hslArray, rgb, rgbArray, and hex*. The type of the generated color will vary based on the format chosen.\n\n### Examples\n\n```javascript\n\n// Returns a hex code for an attractive color\nrandomColor(); \n\n// Returns an array of ten green colors\nrandomColor({\n   count: 10,\n   hue: 'green'\n});\n\n// Returns a hex code for a light blue\nrandomColor({\n   luminosity: 'light',\n   hue: 'blue'\n});\n\n// Returns a hex code for a 'truly random' color\nrandomColor({\n   luminosity: 'random',\n   hue: 'random'\n});\n\n// Returns a bright color in RGB\nrandomColor({\n   luminosity: 'bright',\n   format: 'rgb' // e.g. 'rgb(225,200,20)'\n});\n\n```\n\n### License\n\nThis project is licensed under the terms of the MIT license.\n\n### To do \n\n*More generally, it might be a good idea to consider using other color models.*\n\n1. When returning an array of multiple colors, try to make each color as distinct as possible. Make sure each color is distinct to its neighbours.\n2. Improve attractive dark color generation, currently they're a touch murky.\n3. Improve the color dictionary\n  - definition of hue values and attractive luminosity bounds\n  - think about how to store hue aliases (e.g. fuschia) or subranges (e.g teal)\n  - think about making a little point and click tool for defining your own luminosity bounds and customizing the color dictionary\n4. Think about using and returning seeds.\n5. Think about adding feature to return complementary & contrasting colors, as well as color triads, tetrads etc. Other libraries might already do this better though.\n6. Think about adding a scheme options which would return a dominant color, as well as secondary, tertiary color and primary and secondary text colors. This might be a bad idea.\n\nhttp://indiegamr.com/generate-repeatable-random-numbers-in-js/",
  "readmeFilename": "README.md",
  "_id": "randomcolor@0.2.0",
  "dist": {
    "shasum": "3f67c1dc6131737d26c15acc43ce9177a718657e"
  },
  "_from": "randomcolor@",
  "_resolved": "https://registry.npmjs.org/randomcolor/-/randomcolor-0.2.0.tgz"
}
